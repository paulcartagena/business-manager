@using BusinessManager.Models
@using BusinessManager.Models.ViewModels
@using BusinessManager.Models.Enums
@model List<InventoryMovement>
@{
    ViewData["Title"] = "Movimientos de Inventario";
}

<style>
    .movement-card {
        border-left: 4px solid #3b82f6;
    }

        .movement-card .badge {
            font-size: 0.85rem;
        }

    @@media (max-width: 768px) {
        .table-responsive {
            font-size: 0.875rem;
        }

        .btn-sm {
            padding: 0.25rem 0.4rem;
            font-size: 0.75rem;
        }
    }
</style>

@await Html.PartialAsync("_PageHeader", new PageHeaderViewModel
{
    Title = "Movimientos de Inventario",
    ButtonText = "Crear",
    ButtonUrl = "#",
    ButtonClass = "",
    ButtonId = "btnCreateMovement",
    ButtonIcon = "bi bi-plus-square-fill"
})

<!-- Vista de TABLA para Desktop/Tablet -->
<div class="d-none d-md-block">
    <div class="table-responsive">
        <table class="table mt-2 table-striped table-hover">
            <thead>
                <tr>
                    <th>Fecha</th>
                    <th>Producto</th>
                    <th>Tipo</th>
                    <th>Cantidad</th>
                    <th class="d-none d-lg-table-cell">Notas</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var movement in Model)
                {
                    <tr>
                        <td>
                            <small>@movement.CreatedAt.ToString("dd/MM/yyyy")</small>
                            <br />
                            <small class="text-muted">@movement.CreatedAt.ToString("HH:mm")</small>
                        </td>
                        <td><strong>@movement.Product.Name</strong></td>
                        <td>
                            @if (movement.MovementType == MovementTypeEnum.ENTRADA)
                            {
                                <span class="badge bg-success">ENTRADA</span>
                            }
                            else if (movement.MovementType == MovementTypeEnum.SALIDA)
                            {
                                <span class="badge bg-danger">SALIDA</span>
                            }
                            else if (movement.MovementType == MovementTypeEnum.AJUSTE)
                            {
                                <span class="badge bg-warning text-dark">AJUSTE</span>
                            }
                            else if (movement.MovementType == MovementTypeEnum.TRASLADO)
                            {
                                <span class="badge bg-info">TRASLADO</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">@movement.MovementType</span>
                            }
                        </td>
                        <td>
                            <strong>
                                @if (movement.MovementType == MovementTypeEnum.ENTRADA || movement.MovementType == MovementTypeEnum.AJUSTE)
                                {
                                    <span class="text-success">+@movement.Quantity</span>
                                }
                                else if (movement.MovementType == MovementTypeEnum.SALIDA)
                                {
                                    <span class="text-danger">-@movement.Quantity</span>
                                }
                                else
                                {
                                    @movement.Quantity
                                }
                            </strong>
                        </td>
                        <td class="d-none d-lg-table-cell">
                            <small class="text-muted">@movement.Notes</small>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Vista de CARDS para Móvil -->
<div class="d-md-none mt-3">
    @foreach (var movement in Model)
    {
        <div class="card mb-3 movement-card shadow-sm">
            <div class="card-body p-3">
                <div class="d-flex justify-content-between align-items-start mb-2">
                    <div>
                        <h6 class="mb-1 fw-bold">@movement.Product.Name</h6>
                        <small class="text-muted">
                            <i class="bi bi-calendar"></i> @movement.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                        </small>
                    </div>
                    @if (movement.MovementType == MovementTypeEnum.ENTRADA)
                    {
                        <span class="badge bg-success">ENTRADA</span>
                    }
                    else if (movement.MovementType == MovementTypeEnum.SALIDA)
                    {
                        <span class="badge bg-danger">SALIDA</span>
                    }
                    else if (movement.MovementType == MovementTypeEnum.AJUSTE)
                    {
                        <span class="badge bg-warning text-dark">AJUSTE</span>
                    }
                    else if (movement.MovementType == MovementTypeEnum.TRASLADO)
                    {
                        <span class="badge bg-info">TRASLADO</span>
                    }
                    else
                    {
                        <span class="badge bg-secondary">@movement.MovementType</span>
                    }
                </div>

                <div class="d-flex align-items-center mb-2">
                    <div>
                        <small class="text-muted d-block">Cantidad</small>
                        <h5 class="mb-0">
                            @if (movement.MovementType == MovementTypeEnum.ENTRADA || movement.MovementType == MovementTypeEnum.AJUSTE)
                            {
                                <span class="text-success">+@movement.Quantity</span>
                            }
                            else if (movement.MovementType == MovementTypeEnum.SALIDA)
                            {
                                <span class="text-danger">-@movement.Quantity</span>
                            }
                            else
                            {
                                @movement.Quantity
                            }
                        </h5>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(movement.Notes))
                {
                    <div class="bg-light p-2 rounded">
                        <small class="text-muted">
                            <i class="bi bi-sticky"></i> @movement.Notes
                        </small>
                    </div>
                }
            </div>
        </div>
    }

    @if (!Model.Any())
    {
        <div class="text-center text-muted py-5">
            <i class="bi bi-box-seam" style="font-size: 3rem;"></i>
            <p class="mt-2">No hay movimientos de inventario registrados</p>
        </div>
    }
</div>

<div class="modal fade" id="movementModal" tabindex="-1" aria-labelledby="movementModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/js/utils/modalManager.js" asp-append-version="true"></script>
}